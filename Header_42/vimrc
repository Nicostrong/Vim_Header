" Fichier .vimrc de configuration de vim

filetype indent on
filetype plugin indent on
filetype plugin on

" Affichage

set ruler " position curseur
set showcmd
set ttyfast " utilisation du terminal

if has ("syntax")
    syntax on
endif

" Activation du backup

set backup

" Dossier de backup

if filewritable(expand("~/.vim/backup")) == 2
	set backupdir=$HOME/.vim/backup
else
	if has("unix") || has("win32unix")
		call system("mkdir $HOME/.vim/backup -p")
		set backupdir=$HOME/.vim/backup
	endif
endif

" Commande automatique

set smartindent
set autoindent

set nu 

set textwidth=80
" set colorcolumn=80
set tabstop=4
set expandtab
set shiftwidth=4
set scrolloff=3 " Permet de toujours laisser trois lignes visibles au-dessus et en-dessous du curseur

set showmatch " montre les parenthèses
set matchtime=2

set autochdir

set nocompatible


" l'arrière plan

set background=dark

" La recherche

set incsearch
set ignorecase
set smartcase
set hlsearch

" création des différentes variables des headers

let g:HeaderInsert = 0
let g:filename = expand('%:t')
let g:date_born = strftime('%d/%m/%Y %H:%M:%S')
let g:date_update = strftime('%d/%m/%Y %H:%M:%S')
"let g:username = trim(system('id -F'))
"let g:username = trim(system('id -un'))
let g:username = "Nicostrong"
let g:email = " <nicostrong@msn.com>"

" fonction d'insertion de header

source ~/.vim/fonctions/header_42.vim

" Insertion automatique du header curseur positionné en dessous

autocmd BufNewFile *.c call InsertHeader()
autocmd BufNewFile *.h call InsertHeader()
autocmd BufNewFile *.sh call InsertHeader()

" Mise à jour de la date de dernière modification seulement si header initialise

augroup Update

    autocmd BufWritePre * if g:HeaderInsert == 1 || &filetype == "c" || &filetype == "h" || &filetype == "sh" | call Update_date() | endif
    autocmd BufWritePost * if g:HeaderInsert == 1 || &filetype == "c" || &filetype == "h" || &filetype == "sh" | silent! execute 'write' | endif

augroup END

" Insertion du header via la touche F1
command! Header call InsertSpaceForHeader()
map <F1> :Header<CR>

